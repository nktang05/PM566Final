mean_hesitancy <- mean_hesitancy %>%
arrange(desc(Estimated_Hesitant))
#make sure factor
mean_hesitancy$State_Code <- factor(mean_hesitancy$State_Code, levels = mean_hesitancy$State_Code)
#new df to look at hesitant and not hesitant rates
mean_hesitancy_long <- mean_hesitancy %>%
pivot_longer(cols = c("Estimated_Hesitant", "Estimated_not_hesitant"),
names_to = "Type",
values_to = "Percentage")
# Create a scatter plot
v2.5 <- ggplot(mean_hesitancy, aes(x = Estimated_Hesitant, y = Estimated_not_hesitant, label = State_Code)) +
geom_point(aes(color = Region), size = 4, alpha = 0.8) +
geom_text(vjust = -0.5, size = 3) +
labs(
title = "Fig 2. Scatter Plot of Hesitancy vs. Non-Hesitancy by State",
x = "Average Estimated Hesitant (%)",
y = "Average Estimated Not Hesitant (%)",
color = "Region"
) +
theme_minimal() +
theme(
axis.text = element_text(size = 10),
axis.title = element_text(size = 12),
plot.title = element_text(size = 14, hjust = 0.5)
) +
scale_color_brewer(palette = "Set1")
# Convert the ggplot to an interactive plotly plot
v2.5_interactive <- ggplotly(v2.5, tooltip = c("x", "y", "label", "color"))
# Display the interactive plot
v2.5_interactive
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity, data = data %>%
filter(region = "South"))
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity, data = data %>%
filter(region = "South"))
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity, data = data %>%
filter(region == "South"))
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity, data = data %>%
filter(Region == "South"))
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity, data = data %>%
filter(Region == "Northeast"))
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity, data = data %>%
filter(Region == "South"))
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity, data = data %>%
filter(Region == "West"))
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * Region + `CVAC level of concern for vaccination rollout` * Region + Predominant_Ethnicity * Region, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * `covidDeathRateper100,000` + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` + Predominant_Ethnicity * `covidDeathRateper100,000`, data = data)
summary(model1)
summary(model1)$r.squared
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * Region + `CVAC level of concern for vaccination rollout` * Region + Predominant_Ethnicity * Region, data = data)
summary(model1)
summary(model1)$r.squared
summary(model1)$adj.r.squared
AIC(model1)
BIC(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * Region + `CVAC level of concern for vaccination rollout` * Region + Predominant_Ethnicity * Region, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * `covidDeathRateper100,000` + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` + Predominant_Ethnicity * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity, data = data)
summary(model1)
# Model 2: Age-Adjusted
model2 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity + `Percent adults fully vaccinated against COVID-19 (as of 6/10/21)`, data = data)
summary(model2)
# Model 3: BMI-Adjusted
model3 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity + education, data = data)
summary(model3)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * `covidDeathRateper100,000` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * `covidDeathRateper100,000`* Region, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * `covidDeathRateper100,000` + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` + Predominant_Ethnicity * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * `covidDeathRateper100,000` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * `covidDeathRateper100,000`* Region + education, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * `covidDeathRateper100,000` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * `covidDeathRateper100,000`* Region + education * `covidDeathRateper100,000, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * `covidDeathRateper100,000` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * `covidDeathRateper100,000`* Region + education * `covidDeathRateper100,000`, data = data)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * `covidDeathRateper100,000` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * `covidDeathRateper100,000`* Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * `covidDeathRateper100,000` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * `covidDeathRateper100,000`* Region + education * `covidDeathRateper100,000``CVAC level of concern for vaccination rollout`, data = data)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * `covidDeathRateper100,000` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * `covidDeathRateper100,000`* Region + education * `covidDeathRateper100,000`*`CVAC level of concern for vaccination rollout`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * `covidDeathRateper100,000` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * `covidDeathRateper100,000`* Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * `covidDeathRateper100,000`* Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * Region + `CVAC level of concern for vaccination rollout` * Region + Predominant_Ethnicity * `covidDeathRateper100,000`* Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` + Predominant_Ethnicity * `covidDeathRateper100,000`* Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity  + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` *`covidDeathRateper100,000` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` * Region + Predominant_Ethnicity * Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` + Predominant_Ethnicity * Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity  + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * Region + education , data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
summary(model_parsimonious)
library(MASS)
model_parsimonious <- stepAIC(model1, direction = "both", trace = FALSE)
summary(model_parsimonious)
summary(model1)
summary(model)
model <- lm(
formula = `Estimated hesitant` ~
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region) +
(Region * Predominant_Ethnicity) +
(`covidDeathRateper100,000` * education),
data = data
)
summary(model)
model_parsimonious <- stepAIC(model1, direction = "both", trace = FALSE)
summary(model_parsimonious)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
library(MASS)
model_parsimonious <- stepAIC(model1, direction = "both", trace = FALSE)
summary(model_parsimonious)
model <- lm(
formula = `Estimated hesitant` ~
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region) +
(Region * Predominant_Ethnicity) +
(`covidDeathRateper100,000` * education),
data = data
)
summary(model)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
library(MASS)
model_parsimonious <- stepAIC(model1, direction = "both", trace = FALSE)
summary(model_parsimonious)
model <- lm(
formula = `Estimated hesitant` ~
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region) +
(Region * Predominant_Ethnicity) +
(`covidDeathRateper100,000` * education),
data = data
)
summary(model)
model <- lm(
formula = `Estimated hesitant` ~ `Social Vulnerability Index (SVI)` +
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region) +
(Region * Predominant_Ethnicity) +
(`covidDeathRateper100,000` * education),
data = data
)
summary(model)
model3 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity + education + Region + `covidDeathRateper100,000`, data = data)
model3 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity + education + Region + `covidDeathRateper100,000`, data = data)
model3 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity + education + Region + `covidDeathRateper100,000`, data = data)
summary(model3)
model_parsimonious <- stepAIC(model3, direction = "both", trace = FALSE)
model3 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity + education + Region + `covidDeathRateper100,000`, data = data)
summary(model3)
library(MASS)
model_parsimonious <- stepAIC(model3, direction = "both", trace = FALSE)
library(data.table)
library(leaflet)
library(tidyverse)
library(data.table)
library(R.utils)
library(dplyr)
library(ggplot2)
library(ggpmisc)
library(lubridate)
library(gganimate)
library(ggforce)
library(tidytext)
library(tidyr)
library(readr)
library(dplyr)
library(knitr)
library(kableExtra)
library(plotly)
library(broom)
library(knitr)
library(kableExtra)
library(MASS)
model3 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` +
`CVAC level of concern for vaccination rollout` +
Predominant_Ethnicity + education + Region +
`covidDeathRateper100,000`, data = data_clean)
model3 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` +
`CVAC level of concern for vaccination rollout` +
Predominant_Ethnicity + education + Region +
`covidDeathRateper100,000`, data = data)
summary(model3)
model_parsimonious <- stepAIC(model3, direction = "both", trace = FALSE)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * Region + education * `covidDeathRateper100,000`, data = data)
summary(model1)
model_parsimonious <- stepAIC(model1, direction = "both", trace = FALSE)
summary(model_parsimonious)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * Region + `CVAC level of concern for vaccination rollout` * Region + Predominant_Ethnicity * Region, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * `covidDeathRateper100,000` + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` + Predominant_Ethnicity * `covidDeathRateper100,000`, data = data)
summary(model1)
model1 <- lm(`Estimated hesitant` ~ `Social Vulnerability Index (SVI)` * `covidDeathRateper100,000` * Region + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* Region + Predominant_Ethnicity * `covidDeathRateper100,000`* Region, data = data)
summary(model1)
model <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region) +
(Region * Predominant_Ethnicity) +
(`covidDeathRateper100,000` * education),
data = data
)
summary(model)
summary(model)
modelx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region) +
(Region * Predominant_Ethnicity) +
(`covidDeathRateper100,000` * education),
data = data
)
summary(modelx)
modelx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * Region) +
(Region * Predominant_Ethnicity) +
(`covidDeathRateper100,000` * education),
data = data
)
summary(modelx)
modelx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`) +
(Region * Predominant_Ethnicity) +
(`covidDeathRateper100,000` * education),
data = data
)
summary(modelx)
modelx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region) +
(Predominant_Ethnicity) +
(`covidDeathRateper100,000` * education),
data = data
)
summary(modelx)
modelxx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region) +
(Predominant_Ethnicity) +
( education),
data = data
)
summary(modelxx)
modelxxx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region) +
( education),
data = data
)
summary(modelxxx)
modelxxxx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region),
data = data
)
summary(modelxxxx)
modelxxxx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region) +
( education),
data = data
)
summary(modelxxxx)
modelxxxx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * Region) +
( education),
data = data
)
summary(modelxxxx)
modelx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region) +
(Predominant_Ethnicity) +
( education),
data = data
)
summary(modelx)
modelxxxx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region) +
( education),
data = data
)
summary(modelxxxx)
modelxxxx <- lm(
formula = `Estimated hesitant` ~  +`Social Vulnerability Index (SVI)`+
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region) +
( education),
data = data
)
summary(modelxxxx)
model1 <- lm(`Estimated hesitant` ~ Region + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity, data = data)
summary(model1)
# Model 2: Age-Adjusted
model2 <- lm(`Estimated hesitant` ~ Region + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity + `Percent adults fully vaccinated against COVID-19 (as of 6/10/21)`, data = data)
summary(model2)
# Model 3: BMI-Adjusted
model3 <- lm(`Estimated hesitant` ~ Region + `CVAC level of concern for vaccination rollout` + Predominant_Ethnicity + education, data = data)
summary(model3)
model1 <- lm(`Estimated hesitant` ~ Region * `covidDeathRateper100,000` * `Social Vulnerability Index (SVI)` + `CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`* `Social Vulnerability Index (SVI)` + Predominant_Ethnicity * `covidDeathRateper100,000`* `Social Vulnerability Index (SVI)`, data = data)
summary(model1)
model_parsimonious <- stepAIC(model1, direction = "both", trace = FALSE)
summary(model_parsimonious)
modelxxxxx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * Region) +
( education),
data = data
)
summary(modelxxxxx)
modelxxxxx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000`) +
( education),
data = data
)
summary(modelxxxxx)
modelxxxxx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * Region) +
( education),
data = data
)
summary(modelxxxxx)
modelxxxx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * `covidDeathRateper100,000` * Region) +
( education),
data = data
)
summary(modelxxxx)
modelxxxxx <- lm(
formula = `Estimated hesitant` ~  +
(`CVAC level of concern for vaccination rollout` * Region) +
( education),
data = data
)
summary(modelxxxxx)
residuals1 <-resid(modelxxxx)
ggplot2:: autoplot(residuals1)
library(ggplot2)
library(ggfortify)
ggplot2:: autoplot(residuals1)
install.packages("ggfortify")
install.packages("ggfortify")
library(ggfortify)
ggplot2:: autoplot(residuals1)
# Create a data frame
residuals_data <- data.frame(Fitted = fitted_values, Residuals = residuals1)
ols_plot_cooksd_bar(residuals1)
autoplot(modelxxxx)
ggparVar <- data[, c("`Social Vulnerability Index (SVI)`", "`CVAC level of concern for vaccination rollout`", "`Percent adults fully vaccinated against COVID-19 (as of 6/10/21)`", "education")]
ggpairs(ggparVar)
library(GGally)
ggparVar <- data[, c("`Social Vulnerability Index (SVI)`", "`CVAC level of concern for vaccination rollout`", "`Percent adults fully vaccinated against COVID-19 (as of 6/10/21)`", "education")]
ggpairs(ggparVar)
# Use backticks for proper escaping
ggparVar <- data[, c("`Social Vulnerability Index (SVI)`",
"`CVAC level of concern for vaccination rollout`",
"`Percent adults fully vaccinated against COVID-19 (as of 6/10/21)`",
"education")]
ols_plot_cooksd_bar(modelxxxx)
library(olsrr)
library(olsrr)
ols_plot_cooksd_bar(modelxxxx)
ols_plot_dfbetas(modelxxxx, print_plot = FALSE)
ols_plot_dffits(modelxxxx)
ols_plot_resid_lev(modelxxxx)
autoplot(modelxxxx)
#read in csv
data <- read_csv("Vaccine_Hesitancy_for_COVID-19__County_and_local_estimates_20241025.csv", show_col_types = FALSE)
#test for success
#head(data)
initial_row_count <- nrow(data)
#remove rows with NA
data <- data %>%
drop_na()
final_row_count <- nrow(data)
rows_dropped <- initial_row_count - final_row_count
#print(rows_dropped)
#mutate data type of long and lat
data <- data %>%
mutate(
geo_point_clean = str_remove_all(`Geographical Point`, "POINT \\(|\\)"),
long = as.numeric(str_split_fixed(geo_point_clean, " ", 2)[, 1]),
lat = as.numeric(str_split_fixed(geo_point_clean, " ", 2)[, 2])
) %>%
select(-geo_point_clean)
library(data.table)
library(leaflet)
library(tidyverse)
library(data.table)
library(R.utils)
library(dplyr)
library(ggplot2)
library(ggfortify)
library(ggpmisc)
library(lubridate)
library(gganimate)
library(ggforce)
library(tidytext)
library(tidyr)
library(readr)
library(dplyr)
library(knitr)
library(kableExtra)
library(plotly)
library(broom)
library(knitr)
library(kableExtra)
library(MASS)
library(GGally)
library(olsrr)
#read in csv
data <- read_csv("Vaccine_Hesitancy_for_COVID-19__County_and_local_estimates_20241025.csv", show_col_types = FALSE)
initial_row_count <- nrow(data)
#remove rows with NA
data <- data %>%
drop_na()
final_row_count <- nrow(data)
rows_dropped <- initial_row_count - final_row_count
#mutate data type of long and lat
data <- data %>%
mutate(
geo_point_clean = str_remove_all(`Geographical Point`, "POINT \\(|\\)"),
long = as.numeric(str_split_fixed(geo_point_clean, " ", 2)[, 1]),
lat = as.numeric(str_split_fixed(geo_point_clean, " ", 2)[, 2])
) %>%
select(-geo_point_clean)
region_lookup <- data.frame(
State = c("CONNECTICUT", "MAINE", "MASSACHUSETTS", "NEW HAMPSHIRE", "RHODE ISLAND", "VERMONT","DISTRICT OF COLUMBIA",
"NEW JERSEY", "NEW YORK", "PENNSYLVANIA",
"ILLINOIS", "INDIANA", "IOWA", "KANSAS", "MICHIGAN", "MINNESOTA", "MISSOURI", "NEBRASKA", "NORTH DAKOTA",
"OHIO", "SOUTH DAKOTA", "WISCONSIN",
"ALABAMA", "ARKANSAS", "DELAWARE", "FLORIDA", "GEORGIA", "KENTUCKY", "LOUISIANA", "MARYLAND", "MISSISSIPPI",
"NORTH CAROLINA", "OKLAHOMA", "SOUTH CAROLINA", "TENNESSEE", "TEXAS", "VIRGINIA", "WEST VIRGINIA",
"ALASKA", "ARIZONA", "CALIFORNIA", "COLORADO", "HAWAII", "IDAHO", "MONTANA", "NEVADA", "NEW MEXICO",
"OREGON", "UTAH", "WASHINGTON", "WYOMING"),
Region = c(rep("Northeast", 10), rep("Midwest", 12), rep("South", 17), rep("West", 12))
)
#read in csv
data <- read_csv("Vaccine_Hesitancy_for_COVID-19__County_and_local_estimates_20241025.csv", show_col_types = FALSE)
#test for success
summary(data)
initial_row_count <- nrow(data)
#remove rows with NA
data <- data %>%
drop_na()
final_row_count <- nrow(data)
rows_dropped <- initial_row_count - final_row_count
#mutate data type of long and lat
data <- data %>%
mutate(
geo_point_clean = str_remove_all(`Geographical Point`, "POINT \\(|\\)"),
long = as.numeric(str_split_fixed(geo_point_clean, " ", 2)[, 1]),
lat = as.numeric(str_split_fixed(geo_point_clean, " ", 2)[, 2])
) %>%
select(-geo_point_clean)
#mutate data type of long and lat
data <- data %>%
mutate(
geo_point_clean = str_remove_all(`Geographical Point`, "POINT \\(|\\)"),
long = as.numeric(str_split_fixed(geo_point_clean, " ", 2)[, 1]),
lat = as.numeric(str_split_fixed(geo_point_clean, " ", 2)[, 2])
) %>%
select(-geo_point_clean)
region_lookup <- data.frame(
State = c("CONNECTICUT", "MAINE", "MASSACHUSETTS", "NEW HAMPSHIRE", "RHODE ISLAND", "VERMONT","DISTRICT OF COLUMBIA",
"NEW JERSEY", "NEW YORK", "PENNSYLVANIA",
"ILLINOIS", "INDIANA", "IOWA", "KANSAS", "MICHIGAN", "MINNESOTA", "MISSOURI", "NEBRASKA", "NORTH DAKOTA",
"OHIO", "SOUTH DAKOTA", "WISCONSIN",
"ALABAMA", "ARKANSAS", "DELAWARE", "FLORIDA", "GEORGIA", "KENTUCKY", "LOUISIANA", "MARYLAND", "MISSISSIPPI",
"NORTH CAROLINA", "OKLAHOMA", "SOUTH CAROLINA", "TENNESSEE", "TEXAS", "VIRGINIA", "WEST VIRGINIA",
"ALASKA", "ARIZONA", "CALIFORNIA", "COLORADO", "HAWAII", "IDAHO", "MONTANA", "NEVADA", "NEW MEXICO",
"OREGON", "UTAH", "WASHINGTON", "WYOMING"),
Region = c(rep("Northeast", 10), rep("Midwest", 12), rep("South", 17), rep("West", 12))
)
data <- data %>%
left_join(region_lookup, by = "State")
#test for success
summary(data)
state_data <- read_csv("data/592data.csv")
data <- data %>%
left_join(state_data, by = "State")
data <- data %>%
select(-`FIPS Code`, -`County Name`, -`Geographical Point`, -`County Boundary`, -`State Boundary`)
